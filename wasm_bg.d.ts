/* tslint:disable */
export const memory: WebAssembly.Memory;
export function ext_sr_derive_keypair_hard(a: number, b: number, c: number, d: number, e: number): void;
export function ext_sr_derive_keypair_soft(a: number, b: number, c: number, d: number, e: number): void;
export function ext_sr_derive_public_soft(a: number, b: number, c: number, d: number, e: number): void;
export function ext_sr_from_seed(a: number, b: number, c: number): void;
export function ext_sr_sign(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function ext_sr_verify(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function ext_blake2b(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function ext_keccak256(a: number, b: number, c: number): void;
export function ext_pbkdf2(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function ext_sha512(a: number, b: number, c: number): void;
export function ext_twox(a: number, b: number, c: number, d: number): void;
export function ext_bip39_generate(a: number, b: number): void;
export function ext_bip39_to_entropy(a: number, b: number, c: number): void;
export function ext_bip39_to_mini_secret(a: number, b: number, c: number, d: number, e: number): void;
export function ext_bip39_to_seed(a: number, b: number, c: number, d: number, e: number): void;
export function ext_bip39_validate(a: number, b: number): number;
export function ext_ed_from_seed(a: number, b: number, c: number): void;
export function ext_ed_sign(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function ext_ed_verify(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function __wbindgen_global_argument_ptr(): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_free(a: number, b: number): void;
